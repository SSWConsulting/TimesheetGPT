@page "/fetchdata"
@using TimesheetGPT.WebUI.Data
@using System.Net.Http.Headers
@using Microsoft.Identity.Web
@inject WeatherForecastService ForecastService
@inject ITokenAcquisition TokenAcquisition
@inject MicrosoftIdentityConsentAndConditionalAccessHandler ConsentHandler

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Date</th>
            <th>Temp. (C)</th>
            <th>Temp. (F)</th>
            <th>Summary</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var forecast in forecasts)
        {
            <tr>
                <td>@forecast.Date.ToShortDateString()</td>
                <td>@forecast.TemperatureC</td>
                <td>@forecast.TemperatureF</td>
                <td>@forecast.Summary</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;

    protected async override Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateOnly.FromDateTime(DateTime.Now));

        // Trying to call the API from the Client.
        // I am not sure whether I need to get the token here or on the API.
        // I think it makes sense for me to Get the token on the client and then pass it to the API.
        // Now I know the API will have to do something to validate that token
        // or maybe you can just make the request and see if it fails or not.
        // For now I'm just going to make it work on Blazor Server then worry getting the token right later.
        
        // 1. User logs in here
        // 2. Get a token with the correct scopes
        // 3. Give the token to the API
        // 4. API does MS Graph stuff
        
        
        
    //Call an api
        var client = new HttpClient();
        try
        {
            var token = await TokenAcquisition.GetAccessTokenForUserAsync(new[]
            {
                //TODO: What scopes do I need?
                "Calendars.Read",
                "email"
            });
            client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);

            var response = await client.GetAsync("https://localhost:44384/api/get-subjects");
            var subjects = await response.Content.ReadFromJsonAsync<List<string>>();

            foreach (var subject in subjects)
            {
                Console.WriteLine(subject);
            }
        }
        catch (Exception ex)
        {
            ConsentHandler.HandleException(ex);
        }
    }

}

}