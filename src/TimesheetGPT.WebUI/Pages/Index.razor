@page "/"

@using Microsoft.Identity.Web
@using Microsoft.Graph
@using TimesheetGPT.Core.Models
@using TimesheetGPT.Core.Services
@inject GraphServiceClient GraphServiceClient
@inject MicrosoftIdentityConsentAndConditionalAccessHandler ConsentHandler
@inject TimesheetService TimesheetService

<MudContainer MaxWidth="MaxWidth.Medium" Style="padding-bottom: 2rem;">
    <MudText Typo="Typo.h1">Generate Timesheet</MudText>
    <MudText Typo="Typo.subtitle1">
        Hi @_name, what day would you like to generate a timesheet for?
    </MudText>
    <MudGrid Justify="Justify.SpaceBetween" Style="align-items: center">
        <MudItem xs="12" md="4">
            <MudDatePicker Label="Timesheet day"
                           @bind-Date="_date"
                           DisableToolbar="true"
                           Variant="Variant.Outlined"
                           IsDateDisabledFunc="@((DateTime dt) => dt.Date > DateTime.Now.Date)"
                           Editable="true"/>
        </MudItem> 
        <MudItem xs="12" md="4">
            <MudTextField @bind-Value="_extraPrompt" 
                          Label="Additional prompts" 
                          Placeholder="Ignore emails about..." 
                          Variant="Variant.Outlined"/>
        </MudItem>
        
        <MudItem xs="12" md="4">
            <MudButton Class=""
                       FullWidth="true"
                       Color="Color.Secondary"
                       ButtonType="ButtonType.Submit"
                       Variant="Variant.Filled"
                       StartIcon="@Icons.Material.Filled.PostAdd"
                       Disabled="_loading"
                       @onclick="GenerateTimesheet">
                @_generateButtonText
            </MudButton>
        </MudItem>
    </MudGrid>
</MudContainer>
<MudContainer MaxWidth="MaxWidth.Medium">
    @if (_loading)
    {
        <MudStack AlignItems="AlignItems.Center">
            <MudProgressCircular Size="Size.Large" Color="Color.Secondary" Indeterminate="true" Class="ma-2"/>
        </MudStack>
    }
    else
    {

        <MudGrid Justify="Justify.SpaceBetween">
            @if (_emailSubjects is not null && _emailSubjects?.Count > 1 && !_loading)
            {
                <MudItem xs="12" md="6">
                    <ResultCard Heading="Emails sent">
                        <ul>
                            @foreach (var subject in _emailSubjects.Where(m => !string.IsNullOrEmpty(m)))
                            {
                                <li><MudText>@subject</MudText></li>
                            }
                        </ul>
                    </ResultCard>
                </MudItem>
            }

            @if (!_loading && _meetings != null)
            {
                var meetingsMiddleBreak = "12";
                if (_emailSubjects is not null && _emailSubjects?.Count > 1 && !_loading)
                {
                    meetingsMiddleBreak = "6";
                }
                <MudItem xs="12" md="@(int.Parse(meetingsMiddleBreak))">
                    <ResultCard Heading="Meetings">
                        <ul>
                            @foreach (var meeting in _meetings)
                            {
                                string formatted;

                                var timeSpan = meeting.Length;
                                if (timeSpan.Hours > 0)
                                {
                                    formatted = $"{timeSpan.Hours} hours {timeSpan.Minutes} minutes";
                                }
                                else
                                {
                                    formatted = $"{timeSpan.Minutes} minutes";
                                }

                                <MudPaper Class="ma-2 pa-2">
                                    <MudText Typo="Typo.body2">@meeting.Name</MudText>
                                    <MudText Typo="Typo.body1">@formatted</MudText>
                                </MudPaper>
                            }
                        </ul>
                    </ResultCard>
                </MudItem>
            }

            @if (!_loading && _summaryText != null)
            {
                <MudItem xs="12">
                    <ResultCard Heading="Summary" HasCopyButton="true" CopyText="@_summaryText">
                        <MudText Typo="Typo.body1"></MudText>
                        <MudMarkdown Value="@_summaryText"/>
                    </ResultCard>
                </MudItem>
            }
        </MudGrid>
    }                
</MudContainer>


@code {
    bool _loading;
    IList<string>? _emailSubjects;
    IList<Meeting>? _meetings;
    string? _summaryText;
    DateTime? _date = DateTime.Today;
    string _name = "...";
    string? _extraPrompt;
    string _generateButtonText = "Generate";

    protected async override Task OnInitializedAsync()
    {
        try
        {
            var user = await GraphServiceClient.Me.GetAsync();
            _name = user?.DisplayName;
        }
        catch (Exception ex) //TODO: straight from the template, but should be more specific?
        {
            ConsentHandler.HandleException(ex);
        }
    }

    private async Task GenerateTimesheet()
    {
        _loading = true;
        try
        {
            var dateTime = _date ?? DateTime.Today;
            var summary = await TimesheetService.GenerateSummary(dateTime, GraphServiceClient, _extraPrompt ?? "");

            _emailSubjects = summary.Emails;
            _meetings = summary.Meetings;
            _summaryText = summary.Summary;
            
            _generateButtonText = "Regenerate";
        }
        catch (Exception ex) //TODO: straight from the template, but should be more specific?
        {
            ConsentHandler.HandleException(ex);
        }

        _loading = false;
    }
}